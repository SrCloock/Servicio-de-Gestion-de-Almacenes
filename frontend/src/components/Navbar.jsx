import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import '../styles/Navbar.css';
import { getUserPermisos } from '../helpers/authHelper';

// ============================================
// ‚úÖ COMPONENTE: BARRA DE NAVEGACI√ìN
// ============================================
/**
 * Componente de barra de navegaci√≥n superior
 * 
 * @returns {React.ReactNode} Barra de navegaci√≥n con enlaces a secciones de la app
 */
const Navbar = () => {
  const navigate = useNavigate();
  const permisos = getUserPermisos();
  const isAdmin = permisos.isAdmin;
  const isRepartidor = permisos.isRepartidor;
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);

  // ============================================
  // ‚úÖ EFECTO: GESTI√ìN DE REDIMENSIONAMIENTO
  // ============================================
  /**
   * Cierra men√∫ m√≥vil al cambiar tama√±o de ventana
   */
  useEffect(() => {
    const handleResize = () => {
      if (window.innerWidth > 768) setIsMobileMenuOpen(false);
    };
    window.addEventListener('resize', handleResize);
    return () => window.removeEventListener('resize', handleResize);
  }, []);

  // ============================================
  // ‚úÖ FUNCI√ìN: TOGGLE MEN√ö M√ìVIL
  // ============================================
  const toggleMobileMenu = () => {
    setIsMobileMenuOpen(!isMobileMenuOpen);
  };

  // ============================================
  // ‚úÖ FUNCI√ìN: NAVEGACI√ìN
  // ============================================
  /**
   * Navega a una ruta y cierra men√∫ m√≥vil
   * 
   * @param {string} path - Ruta destino
   */
  const goTo = (path) => {
    navigate(path);
    setIsMobileMenuOpen(false);
  };

  return (
    <nav className="navbar">
      <div className="navbar-header">
        <div className="navbar-logo">üì¶ App Pedidos</div>
        <button 
          className="hamburger" 
          onClick={toggleMobileMenu}
          aria-label={isMobileMenuOpen ? "Cerrar men√∫" : "Abrir men√∫"}
        >
          ‚ò∞
        </button>
      </div>

      <div 
        className={`navbar-links ${isMobileMenuOpen ? 'open' : ''}`}
        aria-hidden={!isMobileMenuOpen}
      >
        {/* ============================================ */}
        {/* ‚úÖ ENLACE: GESTI√ìN DE RUTAS                  */}
        {/* ============================================ */}
        <button onClick={() => goTo('/rutas')} className="btn-nav">
          <span>üì¶</span> Rutas
        </button>

        {/* ============================================ */}
        {/* ‚úÖ ENLACE: TODOS LOS PEDIDOS (ADMIN)         */}
        {/* ============================================ */}
        {isAdmin && (
          <button onClick={() => goTo('/PedidosScreen')} className="btn-nav">
            <span>üìù</span> Todos los Pedidos
          </button>
        )}

        {/* ============================================ */}
        {/* ‚úÖ ENLACE: PEDIDOS ASIGNADOS                 */}
        {/* ============================================ */}
        {(isAdmin || isRepartidor) && (
          <button onClick={() => goTo('/pedidos-asignados')} className="btn-nav">
            <span>üìã</span> Pedidos Asignados
          </button>
        )}

        {/* ============================================ */}
        {/* ‚úÖ ENLACE: TRASPASOS                         */}
        {/* ============================================ */}
        <button onClick={() => goTo('/traspasos')} className="btn-nav">
          <span>üîÑ</span> Traspasos
        </button>
        
        {/* ============================================ */}
        {/* ‚úÖ ENLACE: INVENTARIO (NUEVO)                */}
        {/* ============================================ */}
        <button onClick={() => goTo('/inventario')} className="btn-nav">
          <span>üìä</span> Inventario
        </button>

        {/* ============================================ */}
        {/* ‚úÖ ENLACE: DESIGNAR RUTAS (ADMIN)            */}
        {/* ============================================ */}
        {isAdmin && (
          <button onClick={() => goTo('/designar-rutas')} className="btn-nav">
            <span>üë•</span> Designar Rutas
          </button>
        )}

        {/* ============================================ */}
        {/* ‚úÖ ENLACE: ALBARANES ASIGNADOS               */}
        {/* ============================================ */}
        {(isAdmin || isRepartidor) && (
          <button onClick={() => goTo('/albaranes-asignados')} className="btn-nav">
            {isAdmin ? <span>üìë</span> : <span>üìã</span>}
            {isAdmin ? ' Albaranes Asignados' : ' Mis Albaranes'}
          </button>
        )}

        {/* ============================================ */}
        {/* ‚úÖ ENLACE: INICIO                            */}
        {/* ============================================ */}
        <button onClick={() => goTo('/')} className="btn-nav">
          <span>üè†</span> Inicio
        </button>
      </div>
    </nav>
  );
};

export default Navbar;